# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.
# This file configures Charmcraft.
# See https://juju.is/docs/sdk/charmcraft-config for guidance.

name: k8s
title: Kubernetes
summary: A machine charm for K8s
description: |-
  A machine charm which operates a complete Kubernetes cluster.

  This charm installs and operates a Kubernetes cluster via the k8s snap. It exposes
  relations to co-operate with other kubernetes components such as optional CNIs,
  optional cloud-providers, optional schedulers, external backing stores, and external
  certificate storage.

  This charm provides the following running components:
  * kube-apiserver
  * kube-scheduler
  * kube-controller-manager
  * kube-proxy
  * kubelet
  * containerd

  This charm can optionally disable the following components:
  * A Kubernetes Backing Store
  * A Kubernetes CNI
links:
  contact: https://launchpad.net/~containers
  documentation: https://discourse.charmhub.io/t/k8s-docs-index/13134
  issues:
  - https://github.com/canonical/k8s-operator/issues
  source:
    - https://github.com/canonical/k8s-operator

assumes:
  - juju >= 3.3

type: charm
bases:
  - build-on:
    - name: ubuntu
      channel: "20.04"
      architectures: [amd64]
    run-on:
    - name: ubuntu
      channel: "20.04"
      architectures: [amd64]
    - name: ubuntu
      channel: "22.04"
      architectures: [amd64]
    - name: ubuntu
      channel: "24.04"
      architectures: [amd64]
  - build-on:
    - name: ubuntu
      channel: "20.04"
      architectures: [arm64]
    run-on:
    - name: ubuntu
      channel: "20.04"
      architectures: [arm64]
    - name: ubuntu
      channel: "22.04"
      architectures: [arm64]
    - name: ubuntu
      channel: "24.04"
      architectures: [arm64]
config:
  options:
    annotations:
      type: string
      default: ""
      description: |
        Annotations is a space separated list of (key/value) pairs)  that can be
        used to add arbitrary metadata configuration to the Canonical
        Kubernetes cluster. For more information, see the upstream Canonical
        Kubernetes documentation about annotations:

        https://documentation.ubuntu.com/canonical-kubernetes/latest/snap/reference/annotations/

        Example:
          e.g.: key1=value1 key2=value2
    containerd_custom_registries:
      type: string
      default: "[]"
      description: |
        Registry endpoints and credentials. Setting this config allows containerd
        to pull images from registries where auth is required.

        The value for this config must be a JSON array of credential objects, like this:
          e.g.: [{"url": "https://registry.example.com", "host": "my.registry:port", "username": "user", "password": "pass"}]

        Credential Object Parameters:
        url: REQUIRED str
          the URL to the registry, include the port if not it isn't implied from the schema.
            e.g: "url": "https://my.registry:8443"
            e.g: "url": "http://my.registry"

        host: OPTIONAL str - defaults to auto-generated from the url
          could be registry host address or a name
            e.g.: myregistry.io:9000, 10.10.10.10:5432
            e.g.: myregistry.io, myregistry
          Note: It will be derived from `url` if not provided.
            e.g.: "url": "http://10.10.10.10:8000" --> "host": "10.10.10.10:8000"

        username: OPTIONAL str - default ''
        password: OPTIONAL str - default ''
        identitytoken: OPTIONAL str - default ''
          Used by containerd for basic authentication to the registry.

        ca_file: OPTIONAL str - default ''
        cert_file: OPTIONAL str - default ''
        key_file: OPTIONAL str - default ''
          For ssl/tls communication these should be a base64 encoded file
          e.g.:  "ca_file": "'"$(base64 -w 0 < my.custom.registry.pem)"'"

        skip_verify: OPTIONAL bool - default false
          For situations where the registry has self-signed or expired certs and a quick work-around is necessary.
          e.g.: "skip_verify": true

        Example config:
        juju config k8s containerd_custom_registries='[{
            "url": "https://registry.example.com",
            "host": "ghcr.io",
            "ca_file": "'"$(base64 -w 0 < ~/my.custom.ca.pem)"'",
            "cert_file": "'"$(base64 -w 0 < ~/my.custom.cert.pem)"'",
            "key_file": "'"$(base64 -w 0 < ~/my.custom.key.pem)"'",
        }]'

    datastore:
      default: dqlite
      type: string
      description: |
        The datastore to use in Canonical Kubernetes. This cannot be changed
        after deployment. Allowed values are "dqlite" and "etcd". If "etcd" is
        chosen, the charm should be integrated with the etcd charm.
    labels:
      default: ""
      type: string
      description: |
        Labels can be used to organize and to select subsets of nodes in the
        cluster. Declare node labels in key=value format, separated by spaces.
    register-with-taints:
      type: string
      default: ""
      description: |
        Space-separated list of taints to apply to this node at registration time.

        This config is only used at deploy time when Kubelet first registers the
        node with Kubernetes. To change node taints after deploy time, use kubectl
        instead.

        For more information, see the upstream Kubernetes documentation about
        taints:
        https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
    service-cidr:
      type: string
      default: 10.152.183.0/24
      description: |
        CIDR to use for Kubernetes services. After deployment it is
        only possible to increase the size of the IP range. It is not possible to
        change or shrink the address range after deployment.
    local-storage-enabled:
      type: boolean
      default: true
      description: |
        Enable local storage provisioning. This will create a storage class
        named "local-storage" that uses the hostPath provisioner. This is
        useful for development and testing purposes. It is not recommended for
        production use.
    local-storage-local-path:
      type: string
      default: "/var/snap/k8s/common/rawfile-storage"
      description: |
        The path on the host where local storage will be provisioned. This
        path must be writable by the kubelet. This is only used if
        local-storage.enabled is set to true.
    local-storage-reclaim-policy:
      type: string
      default: Delete
      description: |
        The reclaim policy for local storage. This can be either "Delete" or
        "Retain". If set to "Delete", the storage will be deleted when the
        PersistentVolumeClaim is deleted. If set to "Retain", the storage will
        be retained when the PersistentVolumeClaim is deleted.
    gateway-enabled:
      type: boolean
      default: false
      description: |
        Enable/Disable the gateway feature on the cluster.

actions:
  get-kubeconfig:
    description: Retrieve Public Kubernetes cluster config, including credentials
    params:
      server:
        description: Override the server endpoint with this field
        type: string
  pre-upgrade-check:
    description: Run necessary pre-upgrade checks before executing a charm upgrade.


parts:
  charm:
    plugin: charm
    build-packages: [git]

peers:
  cluster:
    interface: k8s-cluster
  cos-tokens:
    interface: cos-k8s-tokens
  upgrade:
    interface: upgrade

provides:
  cos-agent:
    interface: cos_agent
  cos-worker-tokens:
    interface: cos-k8s-tokens
  containerd:
    interface: containerd
  ceph-k8s-info:
    interface: kubernetes-info
  k8s-cluster:
    interface: k8s-cluster
  kube-control:
    interface: kube-control

requires:
  aws:
    interface: aws-integration
  azure:
    interface: azure-integration
  etcd:
    interface: etcd
  external-cloud-provider:
    interface: external_cloud_provider
  gcp:
    interface: gcp-integration
