# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

name: Build Charms

on:
  workflow_call:
    inputs:
      runs-on:
        type: string
        description: Image runner for building the images
        default: ubuntu-22.04
      working-directory:
        type: string
        description: The working directory for jobs
        default: "./"

jobs:
  build-charms:
    name: Build and push charms
    runs-on: ${{ inputs.runs-on }}
    steps:
      - uses: actions/checkout@v4
      - uses: canonical/setup-lxd@v0.1.1

      - name: Get hash of the source
        run: echo "SRC_HASH=${{ hashFiles('**/charms/**/*.yaml', '**/charms/**/*.py', '**/charms/**/requirements.txt') }}" >> $GITHUB_ENV

      - name: Extract charm name
        working-directory: ${{ inputs.working-directory }}
        run: echo "CHARM_NAME=$([ -f charmcraft.yaml ] && yq '.name' charmcraft.yaml || echo UNKNOWN)" >> $GITHUB_ENV

      - name: Cache charm output
        id: cache-charm
        uses: actions/cache@v4
        with:
          path: ${{ inputs.working-directory }}packed/
          key: ${{ runner.os}}-${{ env.CHARM_NAME }}-charm-${{ env.SRC_HASH }}

      - name: Use cached charm
        if: ${{ env.CHARM_NAME != 'UNKNOWN' && steps.cache-charm.outputs.cache-hit == 'true' }}
        working-directory: ${{ inputs.working-directory }}/${{ matrix.path }}
        run: |
          echo "CHARM_FILE=$(ls packed/${{env.CHARM_NAME}}_*.charm)" >> $GITHUB_ENV

      - name: Pack charm
        if: ${{ env.CHARM_NAME != 'UNKNOWN' && !cancelled() && steps.cache-charm.outputs.cache-hit != 'true' }}
        working-directory: ${{ inputs.working-directory }}/${{ matrix.path }}
        run: |
          sudo snap install charmcraft --classic --channel latest/stable
          charmcraft pack -v
          mkdir -p packed
          mv *.charm packed/
          echo "CHARM_FILE=$(ls packed/${{env.CHARM_NAME}}_*.charm)" >> $GITHUB_ENV

      - name: Upload charm artifact
        if: ${{ env.CHARM_FILE != '' && !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.CHARM_NAME }}-charm
          path: ${{ inputs.working-directory }}/${{ env.CHARM_FILE }}
          if-no-files-found: error
