name: Integration tests

on:
  pull_request:

jobs:
  charmcraft-channel:
    runs-on: ubuntu-24.04
    outputs:
      channel: ${{ steps.charmcraft.outputs.channel }}
    steps:
      - uses: actions/checkout@v5
      - id: charmcraft
        run: echo "channel=$(cat .charmcraft-channel)" >> $GITHUB_OUTPUT

  select-tests:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    outputs:
      amd64: ${{ steps.select.outputs.amd64 }}
      arm64: ${{ steps.select.outputs.arm64 }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup Astral UV
        uses: astral-sh/setup-uv@v6.7.0
        with:
          python-version: "3.12"
      - name: Install tox with UV
        run: uv tool install tox --with tox-uv
      - name: Select tests
        id: select
        run: |
          list_modules() {
            ARCH=$1
            MODULES=$(tox -e integration -- --collect-only -q --arch "$ARCH" 2>/dev/null \
              | grep -E '<Module test_.*\.py>' \
              | sed -E 's/.*<Module (test_[^.]*)\.py>.*/\1/' \
              | sort -u)
            jq -c -R -s 'split("\n")[:-1]' <<< "${MODULES}"
          }
          amd64=$(list_modules amd64)
          arm64=$(list_modules arm64)
          echo "amd64=${amd64}" >> "$GITHUB_OUTPUT"
          echo "arm64=${arm64}" >> "$GITHUB_OUTPUT"

  integration-tests:
    uses: canonical/operator-workflows/.github/workflows/integration_test.yaml@main
    needs: [charmcraft-channel, select-tests]
    permissions:
      contents: read
      actions: write
    secrets: inherit
    strategy:
      matrix:
        arch:
          # built on azure, test on self-hosted
          - id: amd64
            builder-label: ubuntu-22.04
            tester-arch: AMD64
            tester-size: xlarge
            modules: ${{ needs.select-tests.outputs.amd64 }}
          # built and test on on self-hosted
          - id: arm64
            builder-label: ARM64
            tester-arch: ARM64
            tester-size: large
            modules: ${{ needs.select-tests.outputs.arm64 }}
    with:
      identifier: ${{ matrix.arch.id }}
      builder-runner-label: ${{ matrix.arch.builder-label }}
      charmcraft-channel: ${{ needs.charmcraft-channel.outputs.channel }}
      extra-arguments: >-
        ${{ matrix.arch.id == 'arm64' && ' --lxd-containers --series=jammy' || '' }}
      modules: ${{ matrix.arch.modules }}
      juju-channel: 3/stable
      load-test-enabled: false
      provider: lxd
      self-hosted-runner: true
      self-hosted-runner-arch: ${{ matrix.arch.tester-arch }}
      self-hosted-runner-label: ${{ matrix.arch.tester-size }}
      test-timeout: 600
      test-tox-env: integration
      trivy-fs-enabled: false
      trivy-image-config: "trivy.yaml"
      tmate-debug: true
      with-uv: true
      zap-enabled: false
