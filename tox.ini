# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, unit, static, coverage-report

[vars]
src_path = {toxinidir}/charms/worker/k8s/src {toxinidir}/charms/worker/k8s/lib/charms/k8s {toxinidir}/charms/worker/k8s/scripts
tst_path = {toxinidir}/tests/ {toxinidir}/charms/worker/k8s/tests/
all_path = {[vars]tst_path} {[vars]src_path}

[testenv]
setenv =
  PYTHONBREAKPOINT=ipdb.set_trace
  PY_COLORS=1
passenv =
  PYTHONPATH
  CHARM_BUILD_DIR
  MODEL_SETTINGS

[testenv:format]
allowlist_externals = tox
description = Apply coding style standards to code
deps =
    black
    isort
commands =
    isort {[vars]all_path}
    black {[vars]all_path}


[testenv:lint]
allowlist_externals = tox
description = Check code against coding style standards
deps =
    black
    codespell
    flake8
    flake8-builtins
    flake8-copyright
    flake8-docstrings>=1.6.0
    flake8-docstrings-complete>=1.0.3
    flake8-test-docs>=1.0
    mypy
    pep8-naming
    pydocstyle>=2.10
    pylint
    pyproject-flake8
    types-PyYAML
    types-requests
    -r test_requirements.txt
commands =
    pydocstyle {[vars]src_path}
    codespell {toxinidir} --skip {toxinidir}/.git --skip {toxinidir}/.tox \
      --skip {toxinidir}/build --skip {toxinidir}/lib --skip {toxinidir}/venv \
      --skip {toxinidir}/.mypy_cache --skip {toxinidir}/icon.svg
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 {[vars]all_path}
    isort --check-only --diff {[vars]all_path}
    black --check --diff {[vars]all_path}
    mypy {[vars]all_path} --check-untyped-defs
    pylint {[vars]all_path}


[testenv:unit]
allowlist_externals = tox
commands =
    tox -c {toxinidir}/charms/worker/k8s -e unit

[testenv:coverage-report]
allowlist_externals = tox
commands =
    tox -c {toxinidir}/charms/worker/k8s -e coverage-report

[testenv:static]
description = Run static analysis tests
deps =
    bandit[toml]
commands =
    bandit -c {toxinidir}/pyproject.toml -r {[vars]all_path}

[testenv:{integration,integration-k8s,integration-etcd}]
description = Run integration tests
deps = -r test_requirements.txt
commands =
    pytest -v --tb native \
      --log-cli-level=INFO \
      -s {toxinidir}/tests/integration \
      --crash-dump=on-failure \
      --crash-dump-args='-j snap.k8s.* --as-root' \
      {posargs}

[testenv:src-docs]
allowlist_externals=sh
setenv =
    PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
description = Generate documentation for src
deps =
    lazydocs
commands =
    ; can't run lazydocs directly due to needing to run it on src/* which produces an invocation error in tox
    sh generate-src-docs.sh
